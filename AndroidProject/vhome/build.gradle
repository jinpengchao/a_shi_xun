// Top-level build file where you can add configuration options common to all sub-projects/modules.
buildscript {
    ext.kotlin_version = '1.2.71'
    repositories {
        google()
        /*maven {
            url 'https://maven.google.com/'
            name 'Google'
        }*/
        maven{url 'http://maven.aliyun.com/nexus/content/groups/public/'}
        maven { url "http://mvn.mob.com/android" }
        jcenter()
    }
    dependencies {
        classpath 'com.android.tools.build:gradle:3.2.1'
        classpath 'com.jfrog.bintray.gradle:gradle-bintray-plugin:1.7.3'
        classpath 'com.github.dcendents:android-maven-gradle-plugin:1.5'
        classpath 'com.mob.sdk:MobSDK:2018.0319.1724'
        // Google Firebase cloud messaging
        classpath 'com.google.gms:google-services:3.2.1'
        classpath "org.jetbrains.kotlin:kotlin-gradle-plugin:$kotlin_version"

        //implementation "com.android.support:support-core-utils:28.0.0-alpha1"

    }
}


allprojects {
    repositories {
        google()
        maven { url 'http://developer.huawei.com/repo'}
        /*maven {
            url 'https://maven.google.com/'
            name 'Google'
        }*/
        maven{
            url 'http://maven.aliyun.com/nexus/content/groups/public/'
        }
        mavenCentral()
        maven {
            url "https://oss.sonatype.org/content/repositories/snapshots/"
        }
        maven { url "https://jitpack.io" }
        jcenter()
    }
}
task clean(type: Delete) {
    delete rootProject.buildDir
}
if (JavaVersion.current().isJava8Compatible()) {
    allprojects {
        tasks.withType(Javadoc) {
            options.addStringOption('Xdoclint:none', '-quiet')
        }
    }
}
ext{
    if(!project.hasProperty('isAarRelease')){
        isAarRelease = false;
    }
    if(!project.hasProperty('isLite')){
        isLite = false;
    }
    if(!project.hasProperty('sdkVersion')){
        sdkVersion = '3.2.3'
    }
    if(!project.hasProperty('isTravis')) {
        isTravis = false
    }
}